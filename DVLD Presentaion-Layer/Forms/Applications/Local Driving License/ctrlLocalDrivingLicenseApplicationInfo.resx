<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label12.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vgAADr4B6kKxwAAACkZJREFUWEedlwlUlOUexl+UtGuaKGYIeg13y+pq5k3oGrkglpkhoqioLMkyKLvW
        tdzSICTMwChJ2WRVXDAXlhmYgYGZgQGGYWbYhGGGfV9F4NjT+32g5Q295/id85zvm+98Z57f/3n/73/m
        IwCeqvPnwwz9/QM27dvnZODg4EisrLYSsVgy6rPPq1FvPpKHh9eqFf82sVizdsMSU9P/zDMwMFyUnHxz
        1GefV+T3338nbW1tE7Ra7biysjIilxcTebGMKErk5MABTz0Xjofb5s+sp69ZY75px45dlgI+X1epKCGl
        KuUTUirkpLW1ZVSTZ4nc7x8cEx9yLC3huE1ZsI/VBR9bi+1Wa5fPMX3rNeK0z4kEnvlp17mfL272PnT4
        VOKVpAm2WzaQmZMIMX7lBTJ3+nhiPE2XLJwxgczWH0t+CQ4c1eRZIr33B3QTAjhlwuA9EIUdAD/IBnf8
        rPsvHd6Sm5wYcS0qPqkuOPQ8ON6HBr44duqUyz6Hib7uTsSHytvNkXhz7MierRvI7CljyM8/Boxq8iyR
        3v4B3cQAV7k08Vu0dXRBo5JAkXoRxZd88a2HDcw/2YJVq83x2dbtOH/2O+QlX9hYJ74+sT4ngeB+G/sl
        nR0dZJHRRPLTD35/M/h/Gk7gOxd5fvw36O4fRC9VD1Vf331cvZII6517wPE8CO8vvkbCURvkBW2HIHBn
        Ddd/+2XpjVDnRs29JXVaje4bs6eQ0OdKgAVwZQG6evvR2dWNzs4u9PT2oeJeNX67kwqRRApVWQUqCzKg
        vHkG0l9dIT5rA27AVtz2t3l450c31Wm3TWFRoYGbHgwM6o5m9DSxAPEjAJ0999Hd3UMhutDR0YF2Kua6
        u6cbXfTc3tWLtq4+VJarwD/vCcHpLcg+Y4OsIGtIQnbhrNt6ZGZkWI1m9DSxAHH+LvK8uBMsgLa2Fs1N
        zejp7ENPNzVsb0drWxtaW1vR0kJFz42t7ZAIMyEItqcA2yA8uxPiEFtc9DJH6t3bjqMZPU1sE8b6DQN0
        UFORLAdcxV1cEcUjTy5BW1s7a9rS0oJmqqbmZjQ2NUGuLIck/SqEP9gghwKIgnfhgtd6pKfetR/N6Gka
        SWB4CRgAQREPfvknEF8cjdD4EDQ2NNHl6KQptD82b6LiZ2Uhr1AO0dUQCIO2QswCmD8/gDSB9kDnfUSm
        R+Ba8XX8nBaK/VGuqFRVIkcohFKpRF1d3XAaVBUVFRCJJcgW5oL/6yGIfrBGuI8FuM8DEDsC0NP1ABdz
        IhCWfREu1/YgMOUoGrRNqFarUVhYCD6fj2xaeXFxMdsrTBJqbR3yczKRe84O4d7m4PPSnweAQwFOor27
        D7U1teAlJ4InuQWJUowSeQnt7EwKUIR7VVWorLwHqVQKbjqXBalvaGBhCqN9kfDVJlisXW1vZmZGPjT7
        kLg4O5OI8PBn6jFAQeIp1NQ346r/EWT42IHrtA3SDB7UtXUoLStDYZGMTYDL5SEvLw9lZeUQiURQ19RA
        o9GgIj8dBRnXkJmZIa6pqYmrqqq6zIheJzCf/ypaQLizs/NUwhyPAAqT/KAqv4dkB0uoEqNRQnV95xbk
        SQvA5fGouQBFMhlUpaUooMvB5XIRGxuL3qFetDxoRlXvPcg6C8Bv4eJGQxLCNecRVOWPr8p9wSl1wA7F
        ZnwkN4OJ7G1YZXyMgwcPmo19BBDDJHCZJtDchlt7d0PwzUkIg0OQvXAhBGlpKKDGRTSB3NxcpKenIyMz
        E9KCAsTHx6OVmlf3VrHmgtYM1jxCG8aaf11xEByVA3YqLOGucoKkPRcHVQewMu0t+Pj4PAnANKGGAsiy
        hBCuXgfFu8uR4/w55KpSGrUYaRQkkxrn5eezDZmdnY3o6Ghq/qhy3uPKzzCVV/jCbaRyb6UbBgcHac8B
        mgYN3r4zD97e3n8CXPLjyPMpQLWmHmJZPvKlOSj57RrKadzFJQp2zcvptlNRGCaF1JRU2oTpLMD/Vs6Y
        M5Uz5kzlrip79Ax0s+b0zw9cMu2xKGUWPD09nwRgdkG1uh6ZBXRtyyJxLi8EsbdjoFIyCYioaQqbwnAD
        lkGhUCIyMvLJyquHK99WvAnmRabYUPgBOvrb/zTn2UNPpoP5qYawsbGx1NHRmfAYgNkF1TV1uJ11E4Hi
        07glu4mjF4+gIK8AQjqIShQKdhixMKmpLFBERARrHslUTs3tS2zwSeEafFq8DsukC5DbIGTNmeNY9mFM
        LiTQUxDMS52B9evXO1KA11iAaD83FqBW24zj10/gRsENeF7mwD3RiU7C4X3Po12fcvcuC6OgMCoKwwBE
        1VwAtzEVXjIO9pZswyKREV7OJjihOjxiDVwpScBk6bC5nopgbpoBNm7cuHvMGB294QT83eQyug3VmgYI
        i4WI4ccgKPMbXMr4BfliKdJp9Pm0+ZRKBYqYiUibkUkgPDwc/GYeazI4NIg9km2s+ZycVzAwMMDe17TU
        wFAwacRcB1PLx2IB1wiOjo4WY3V0aA/0D+qGn3StKE48jlo667W1TdBqGqGu1rKVlpeXsxMvSyBgE8ig
        SRTSREpLVYiOikKgyg8PHz5kzdh1ltkhQh3GfmaOtTxT1nxa6QswqpwI4+qpWC5YDHd395Em7LtPXB1t
        Y77nWOBW0D7Ib4VCUyyAVl1J53w9KqrUqKDjt7q6iqoaSgolyslBOt0JkXQJLIsssD/vcwwNDY1Y/nnw
        KzNo0xFMLx0H48qpeEM9C8u1C7Au1wQeHh4jAL29xHTVqjFLX5+94qgv54jXrnXiY7Yrh66c2gXZ9e9R
        I02BtlKBGo2WNmktHb0a2iu1VFrExcXiI5kZG/uarJVo7W0dsR4+LLJWsZUz5ktr5uKDumXY2PgBbPI3
        w8vL61ECfeS9lSvJ669NIVqNmtQ3tpD4hMRF+53s3GzMl6X4bFnaFXvECtL4E1CLrqG+UoaG+no0NLYg
        MTERb+YbY3IuwWT6xvZu7mK09Daz5pUNldAr0GFjZypnzC2bzGHXag23Ise/DCIGwIQCGE8lLc0NT/xU
        auuayIXwqJl7bXfssFyzPM7H+r2GmK+tIIn6EtWCS0hKiIWR5GXWnOlyZpstkMzA0aIv8U7WIujThjOu
        1qexL6SVm7Hmvh0cHFEcgq+v7zBAHwVYaWpCFs/WI2EhgeRKXCSrJKrkpDhy92YSSYgJJz6ebmTx/Dl6
        Mw30PzJ5yzjU9dN3Ks6dPo7305ZhSaoxlqRT8agyjfGmgCrbGG/nzMP7kqX4WPohdhdthbvcGceUXyKI
        G4CTJ0+aMf60B/rIuytWkIWzJpEFBi+Sea+OJ/MNxtPXLubVa1jz6b0lsyeRpXOnkjco6D+nTyJTXp7w
        4m7bnVb7ne1ijhywLYs85ToUE+AOB/u9MbQ3NqempljQmbF6NNHfktUhwcGEEenvf0CcXVyIkeF0Ymgw
        jRi+Oo0YGbxCNXz96B57HtEs+uzMGdPINP0pZNz4f9AyxpCXXnrpXwvmz/mvvv4Uk3EvsOESb0/PJ5b0
        7wL5A2O1ttW3IniyAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="label11.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAJ1JREFUWEft
        jkEKw0AMA/fT/VBfld+0BHZFaFQxG5JDggd0sQbbrSiKX17v5XNl+pn/IOkgUw+Mj8/KdndkSoY87wHX
        ET85gsiuI35yRJLXGUnXxZi5bgeR0xEH2SmI7DriJ0cQ2XXET44gsuuInxyR5HVG0nUxZq7bQeR0xEF2
        CiK7jvjJEVMy5L4PnJnt7giSDoIfuDL9TFEUnda+FP8m5xtKzOYAAAAASUVORK5CYII=
</value>
  </data>
  <data name="label10.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>